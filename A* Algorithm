import pygame
import math
from queue import PriorityQueue


WIDTH=800
WIN=pygame.display.set_mode((WIDTH,WIDTH))
pygame.display.set_caption('A* path Finding Algorithm')

RED = (255,0,0)
WHITE = (255,255,255)
BLUE = (0,255,0)
RED = (255,0,0)
GREEN = (0,255,0)
BLACK = (0,0,0)
GREY = (128,128,128)
PURPLE = (128,0,128)
TURQUOISE = (63,224,208)
ORANGE = (255,165,0)
YELLOW = (255,255,0)

class spot:
    def __init__(self,col,row,width,total_rows):
        self.row=row
        self.col=col
        self.x=row * width
        self.y=col * width
        self.color=WHITE
        self.neighbours=[]
        self.width=width
        self.total_rows=total_rows

    def get_position(self):
        return self.row,self.col

    def is_coled(self):
        return self.color==RED

    def is_available(self):
        return self.color==GREEN

    def is_barrier(self):
        return self.color==BLACK

    def is_unused(self):
        return self.color==WHITE

    def is_start(self):
        return self.color==ORANGE

    def is_end(self):
        return self.color==TURQUOISE

    def reset(self):
        return self.color=WHITE

    def make_closed(self):
        return self.color=RED

    def make_open(self):
        return self.color=GREEN

    def make_barrier(self):
        return self.color=BLACK

    def make_end(self):
        return self.color=TURQUOISE

   def make_path(self):
       return self.color=PURPLE

    def draw(self):
        pygame.draw.rect(win,self.color,(self.x,self,y))
        
